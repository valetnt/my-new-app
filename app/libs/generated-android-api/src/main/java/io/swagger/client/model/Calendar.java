/**
 * SMIS2-CORE REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.TimeZone;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Calendar {
  
  @SerializedName("firstDayOfWeek")
  private Integer firstDayOfWeek = null;
  @SerializedName("lenient")
  private Boolean lenient = null;
  @SerializedName("minimalDaysInFirstWeek")
  private Integer minimalDaysInFirstWeek = null;
  @SerializedName("time")
  private Date time = null;
  @SerializedName("timeInMillis")
  private Long timeInMillis = null;
  @SerializedName("timeZone")
  private TimeZone timeZone = null;
  @SerializedName("weekDateSupported")
  private Boolean weekDateSupported = null;
  @SerializedName("weekYear")
  private Integer weekYear = null;
  @SerializedName("weeksInWeekYear")
  private Integer weeksInWeekYear = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getFirstDayOfWeek() {
    return firstDayOfWeek;
  }
  public void setFirstDayOfWeek(Integer firstDayOfWeek) {
    this.firstDayOfWeek = firstDayOfWeek;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getLenient() {
    return lenient;
  }
  public void setLenient(Boolean lenient) {
    this.lenient = lenient;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getMinimalDaysInFirstWeek() {
    return minimalDaysInFirstWeek;
  }
  public void setMinimalDaysInFirstWeek(Integer minimalDaysInFirstWeek) {
    this.minimalDaysInFirstWeek = minimalDaysInFirstWeek;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getTime() {
    return time;
  }
  public void setTime(Date time) {
    this.time = time;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getTimeInMillis() {
    return timeInMillis;
  }
  public void setTimeInMillis(Long timeInMillis) {
    this.timeInMillis = timeInMillis;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public TimeZone getTimeZone() {
    return timeZone;
  }
  public void setTimeZone(TimeZone timeZone) {
    this.timeZone = timeZone;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Boolean getWeekDateSupported() {
    return weekDateSupported;
  }
  public void setWeekDateSupported(Boolean weekDateSupported) {
    this.weekDateSupported = weekDateSupported;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getWeekYear() {
    return weekYear;
  }
  public void setWeekYear(Integer weekYear) {
    this.weekYear = weekYear;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getWeeksInWeekYear() {
    return weeksInWeekYear;
  }
  public void setWeeksInWeekYear(Integer weeksInWeekYear) {
    this.weeksInWeekYear = weeksInWeekYear;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Calendar calendar = (Calendar) o;
    return (this.firstDayOfWeek == null ? calendar.firstDayOfWeek == null : this.firstDayOfWeek.equals(calendar.firstDayOfWeek)) &&
        (this.lenient == null ? calendar.lenient == null : this.lenient.equals(calendar.lenient)) &&
        (this.minimalDaysInFirstWeek == null ? calendar.minimalDaysInFirstWeek == null : this.minimalDaysInFirstWeek.equals(calendar.minimalDaysInFirstWeek)) &&
        (this.time == null ? calendar.time == null : this.time.equals(calendar.time)) &&
        (this.timeInMillis == null ? calendar.timeInMillis == null : this.timeInMillis.equals(calendar.timeInMillis)) &&
        (this.timeZone == null ? calendar.timeZone == null : this.timeZone.equals(calendar.timeZone)) &&
        (this.weekDateSupported == null ? calendar.weekDateSupported == null : this.weekDateSupported.equals(calendar.weekDateSupported)) &&
        (this.weekYear == null ? calendar.weekYear == null : this.weekYear.equals(calendar.weekYear)) &&
        (this.weeksInWeekYear == null ? calendar.weeksInWeekYear == null : this.weeksInWeekYear.equals(calendar.weeksInWeekYear));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.firstDayOfWeek == null ? 0: this.firstDayOfWeek.hashCode());
    result = 31 * result + (this.lenient == null ? 0: this.lenient.hashCode());
    result = 31 * result + (this.minimalDaysInFirstWeek == null ? 0: this.minimalDaysInFirstWeek.hashCode());
    result = 31 * result + (this.time == null ? 0: this.time.hashCode());
    result = 31 * result + (this.timeInMillis == null ? 0: this.timeInMillis.hashCode());
    result = 31 * result + (this.timeZone == null ? 0: this.timeZone.hashCode());
    result = 31 * result + (this.weekDateSupported == null ? 0: this.weekDateSupported.hashCode());
    result = 31 * result + (this.weekYear == null ? 0: this.weekYear.hashCode());
    result = 31 * result + (this.weeksInWeekYear == null ? 0: this.weeksInWeekYear.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Calendar {\n");
    
    sb.append("  firstDayOfWeek: ").append(firstDayOfWeek).append("\n");
    sb.append("  lenient: ").append(lenient).append("\n");
    sb.append("  minimalDaysInFirstWeek: ").append(minimalDaysInFirstWeek).append("\n");
    sb.append("  time: ").append(time).append("\n");
    sb.append("  timeInMillis: ").append(timeInMillis).append("\n");
    sb.append("  timeZone: ").append(timeZone).append("\n");
    sb.append("  weekDateSupported: ").append(weekDateSupported).append("\n");
    sb.append("  weekYear: ").append(weekYear).append("\n");
    sb.append("  weeksInWeekYear: ").append(weeksInWeekYear).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
